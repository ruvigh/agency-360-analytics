AWSTemplateFormatVersion: '2010-09-09'
Description: VPC with Aurora PostgreSQL RDS, Security Groups for QuickSight, SQS, and QuickSight Integration

Resources:
  # VPC Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: Obs360-VPC

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Obs360-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-southeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Obs360-Public-Subnet-1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ap-southeast-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Obs360-Public-Subnet-2

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: ap-southeast-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Obs360-Public-Subnet-3

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Obs360-Public-RT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  # Security Groups
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS Aurora PostgreSQL
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 10.0.0.0/16
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 10.0.0.0/16
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Obs360-RDS-SG

  QuickSightSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for QuickSight access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref RDSSecurityGroup
      Tags:
        - Key: Name
          Value: Obs360-QuickSight-SG

  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora PostgreSQL
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3

  # Route 53 Resolver endpoints
  Route53ResolverEndpoint:
    Type: AWS::Route53Resolver::ResolverEndpoint
    Properties:
      Direction: OUTBOUND
      IpAddresses:
        - SubnetId: !Ref PublicSubnet1
        - SubnetId: !Ref PublicSubnet2
      SecurityGroupIds:
        - !Ref RDSSecurityGroup
      Name: !Sub ${AWS::StackName}-resolver
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-resolver

  # Aurora PostgreSQL Cluster
  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Sub ${AWS::StackName}-coredb-cluster
      Engine: aurora-postgresql
      EngineVersion: '16.6'
      DatabaseName: core
      MasterUsername: postgres
      ManageMasterUserPassword: true
      EnableHttpEndpoint: true
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 16
      BackupRetentionPeriod: 1
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref RDSSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-coredb-cluster

  AuroraDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: db.serverless
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-coredb-instance

  # Wait Handle for Aurora
  AuroraWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  # Wait Condition for Aurora
  AuroraWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: AuroraDBInstance
    Properties:
      Handle: !Ref AuroraWaitHandle
      Timeout: '900'
      Count: 1

  # SQS Queue
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-sqs
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sqs

  # SQS Queue Policy
  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: __default_policy_ID
        Statement:
          - Sid: __owner_statement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: SQS:*
            Resource: !GetAtt SQSQueue.Arn
          - Sid: __sender_statement
            Effect: Allow
            Principal:
              AWS:
                - arn:aws:iam::357536368434:root
                - arn:aws:iam::137433690462:root
                - arn:aws:iam::423755636010:root
                - arn:aws:iam::615299736125:root
            Action:
              - sqs:SendMessage
              - sqs:GetQueueUrl
            Resource: !GetAtt SQSQueue.Arn

  # SQS VPC Endpoint
  SQSVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.sqs
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3
      SecurityGroupIds:
        - !Ref RDSSecurityGroup
      PrivateDnsEnabled: true

  # IAM Role for QuickSight VPC Connection
  QuickSightVPCConnectionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-qs-vpc-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: quicksight.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: QuickSightVPCAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                Resource: '*'

  # QuickSight VPC Connection
  QuickSightVPCConnection:
    Type: AWS::QuickSight::VPCConnection
    DependsOn: QuickSightVPCConnectionRole
    Properties:
      AwsAccountId: !Ref AWS::AccountId
      VPCConnectionId: !Sub ${AWS::StackName}-vpc
      Name: !Sub ${AWS::StackName}-vpc
      RoleArn: !GetAtt QuickSightVPCConnectionRole.Arn
      SecurityGroupIds:
        - !Ref QuickSightSecurityGroup
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
        - !Ref PublicSubnet3

  # QuickSight Data Source
  QuickSightDataSource:
    Type: AWS::QuickSight::DataSource
    DependsOn:
      - QuickSightVPCConnection
      - AuroraWaitCondition
      - AuroraDBInstance
    Properties:
      AwsAccountId: !Ref AWS::AccountId
      DataSourceId: !Sub ${AWS::StackName}-aurora-datasource
      Name: Core Database
      Type: AURORA_POSTGRESQL
      DataSourceParameters:
        AuroraPostgreSqlParameters:
          Database: core
          Host: !GetAtt AuroraDBCluster.Endpoint.Address
          Port: 5432
      Credentials:
        CredentialPair:
          Username: postgres
          Password: !Sub '{{resolve:secretsmanager:${AuroraDBCluster.MasterUserSecret.SecretArn}:SecretString:password}}'
      VpcConnectionProperties:
        VpcConnectionArn: !GetAtt QuickSightVPCConnection.Arn
      SslProperties:
        DisableSsl: false

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC

  RDSEndpoint:
    Description: Aurora PostgreSQL Cluster Endpoint
    Value: !GetAtt AuroraDBCluster.Endpoint.Address

  RDSPort:
    Description: Aurora PostgreSQL Cluster Port
    Value: 5432

  RDSSecurityGroupId:
    Description: RDS Security Group ID
    Value: !Ref RDSSecurityGroup

  QuickSightSecurityGroupId:
    Description: QuickSight Security Group ID
    Value: !Ref QuickSightSecurityGroup

  DBClusterSecretArn:
    Description: The ARN of the auto-generated secret storing the master user password
    Value: !GetAtt AuroraDBCluster.MasterUserSecret.SecretArn

  SQSQueueURL:
    Description: URL of the SQS Queue
    Value: !Ref SQSQueue

  SQSQueueARN:
    Description: ARN of the SQS Queue
    Value: !GetAtt SQSQueue.Arn

  QuickSightVPCConnectionArn:
    Description: ARN of the QuickSight VPC Connection
    Value: !GetAtt QuickSightVPCConnection.Arn

  QuickSightDataSourceArn:
    Description: ARN of the QuickSight Data Source
    Value: !GetAtt QuickSightDataSource.Arn

  Route53ResolverEndpointId:
    Description: Route 53 Resolver Endpoint ID
    Value: !Ref Route53ResolverEndpoint

  AuroraClusterEndpoint:
    Description: Aurora Cluster Endpoint
    Value: !GetAtt AuroraDBCluster.Endpoint.Address

  AuroraClusterPort:
    Description: Aurora Cluster Port
    Value: !GetAtt AuroraDBCluster.Endpoint.Port
